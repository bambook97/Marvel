{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","services/MarvelService.js","components/ErrorMessage/error.gif","components/ErrorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/ErrorBoundry/ErrorBoundry.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","MarvelService","_apiBase","_apiKey","_baseOffset","getResourse","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","ErrorMessage","objectFit","src","img","alt","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","updateChar","Math","floor","random","onCharLoading","then","catch","onError","this","clearInterval","timerId","console","log","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","arr","item","props","onCharSelected","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","i","ErrorBoundry","errorInfo","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12a74c9d.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","\n\nclass MarvelService {\n\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    _apiKey = 'apikey=72c7fd580ea839f0e2e8a7982b411c33';\n    _baseOffset = 210;\n\n    getResourse = async (url) => {\n        let res = await fetch(url);\n\n        if(!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n        }\n\n        return await res.json();\n    }\n\n    getAllCharacters = async (offset = this._baseOffset) => {\n        const res = await this.getResourse(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\n        return res.data.results.map(this._transformCharacter)\n    }\n    getCharacter = async (id) => {\n        const res = await this.getResourse(`${this._apiBase}characters/${id}?${this._apiKey}`);\n        return this._transformCharacter(res.data.results[0]);\n    }\n\n    _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n}\n\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{ display:'block', width: \"250px\", height: \"250px\", objectFit: 'contain', margin: \"0 auto\"}}\n        src={img} alt=\"error\"/>\n    )\n}\n\nexport default ErrorMessage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react/cjs/react.production.min';\nimport Spinner from '../spinner/Spinner';\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\nimport './randomChar.scss';\n\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentWillUnmount () {\n        clearInterval(this.timerId);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n    \n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    render() {\n       console.log('render');\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n        return (\n                <div className=\"randomchar__block\">\n                    <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n                    <div className=\"randomchar__info\">\n                        <p className=\"randomchar__name\">{name}</p>\n                        <p className=\"randomchar__descr\">\n                            {description}\n                        </p>\n                        <div className=\"randomchar__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n        )   \n    \n}\n\nexport default RandomChar;","import {Component} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false\n    }\n    \n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n\n    renderItems(arr) {\n        const items =  arr.map((item) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    key={item.id}\n                    onClick={() => this.props.onCharSelected(item.id)}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n       \n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n\n        const {charList, loading, error, offset, newItemLoading, charEnded} = this.state;\n        \n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react/cjs/react.production.min';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport MarvelService from '../../services/MarvelService';\nimport './charInfo.scss';\n\n\nclass CharInfo extends Component { \n\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount(){\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const {charId} = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n    \n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton/>\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n    return(\n        <>\n            <div className=\"char__basics\">\n                        <img src={thumbnail} alt={name} style={imgStyle}/>\n                        <div>\n                            <div className=\"char__info-name\">{name}</div>\n                            <div className=\"char__btns\">\n                                <a href={homepage} className=\"button button__main\">\n                                    <div className=\"inner\">homepage</div>\n                                </a>\n                                <a href={wiki} className=\"button button__secondary\">\n                                    <div className=\"inner\">Wiki</div>\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"char__descr\">\n                        {description}\n                    </div>\n                    <div className=\"char__comics\">Comics:</div>\n                    <ul className=\"char__comics-list\">\n                        {comics.length > 0 ? null : 'There is no comics with this character'}\n                        {\n                            comics.map((item, i) => {\n\n                                if (i > 9) return;\n                                return (\n                                    <li key={i} className=\"char__comics-item\">\n                                        {item.name}\n                                    </li>\n                                )\n                            })\n                        }\n                    </ul>\n        </>\n    )\n}\n\nexport default CharInfo;","import { Component } from \"react/cjs/react.production.min\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\n\nclass ErrorBoundry extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, errorInfo){\n        console.log(error, errorInfo);\n        this.setState({\n            error: true\n        })\n    }\n\n\n    render(){\n        if (this.state.error) {\n            return <ErrorMessage />\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundry;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react/cjs/react.production.min\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundry from \"../ErrorBoundry/ErrorBoundry\";\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <RandomChar/>\n                    <div className=\"char__content\">\n                        <CharList onCharSelected={this.onCharSelected}/>\n                        <ErrorBoundry>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundry>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\n\nimport './style/style.scss';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}